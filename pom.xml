<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.datastax.samples</groupId>
	<artifactId>microservice-parent</artifactId>
	<version>1.0-SNAPSHOT</version>
	
	<name>Microservices with Spring for Apache Cassandra</name>
	<packaging>pom</packaging>
	<inceptionYear>2020</inceptionYear>
	<description>
	 We have build 2 microservices on top of Apache Cassandra using the version 4.6.x 
	 of the driver. One is illustrating the Spring Data capability and the other the usage of the 
	 core driver by itself.
	</description>

	<properties>

		<!-- Core -->
		<java.version>11</java.version>
		<maven-plugin-compiler.version>3.8.1</maven-plugin-compiler.version>
		<maven-plugin-dockerfile.version>1.4.13</maven-plugin-dockerfile.version>

		<!-- Spring -->
		<spring.version>5.2.6.RELEASE</spring.version>
		<spring-boot.version>2.3.0.RELEASE</spring-boot.version>
		<spring-data.version>3.0.0.RELEASE</spring-data.version>

		<!-- Third Parties -->
		<swagger.version>2.9.2</swagger.version>
		<common-fileupload>1.3.3</common-fileupload>
		<logback.version>1.2.3</logback.version>
		<cassandra-java-driver.version>4.6.1</cassandra-java-driver.version>

	</properties>

	<modules>
		<module>microservice-spring-data</module>
		<module>microservice-spring-boot</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!-- Spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-thymeleaf</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-cassandra</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			
			<!--  Cassandra Driver -->
			<dependency>
				<groupId>com.datastax.oss</groupId>
				<artifactId>java-driver-core</artifactId>
				<version>${cassandra-java-driver.version}</version>
			</dependency>
			<dependency>
				<groupId>com.datastax.oss</groupId>
				<artifactId>java-driver-query-builder</artifactId>
				<version>${cassandra-java-driver.version}</version>
			</dependency>
			<dependency>
				<groupId>com.datastax.oss</groupId>
				<artifactId>java-driver-mapper-runtime</artifactId>
				<version>${cassandra-java-driver.version}</version>
			</dependency>
		
			<!-- Rest API -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			
			<!-- Third party -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${common-fileupload}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-plugin-compiler.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${maven-plugin-dockerfile.version}</version>
					<configuration>
						<repository>datastax-samples/${project.artifactId}</repository>
						<tag>${project.version}</tag>
						<buildArgs>
							<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
						</buildArgs>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<organization>
		<name>DataStax</name>
		<url>http://datastax.com</url>
	</organization>

</project>